MEMORY {
	ZP:	start = $00,	size = $0100, type = rw, file = "";
	OAM:	start = $0200,	size = $0100, type = rw, file = "";
	RAM:	start = $0300,	size = $0500, type = rw, file = "";
	SAV:	start = $6000,	size = $2000, type = rw, file = "";
	HDR:	start = $0000,	size = $0010, type = ro, file = %O, fill = yes, fillval = $00;

	PRG0:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG1:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG2:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG3:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG4:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG5:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG6:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG7:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG8:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG9:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG10:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG11:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG12:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG13:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG14:	start = $8000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;
	PRG15:	start = $C000,	size = $4000, type = ro, file = %O, fill = yes, fillval = $00;

	CHR0:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR1:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR2:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR3:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR4:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR5:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR6:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR7:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR8:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR9:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR10:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR11:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR12:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR13:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR14:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
	CHR15:	start = $0000,	size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;
}

SEGMENTS {
	ZEROPAGE: load = ZP,  type = zp;
	OAM:	  load = OAM, type = bss, align = $100;
	BSS:	  load = RAM, type = bss;
	INESHDR:  load = HDR, type = ro, align = $10;

	SRAMH:	load = SAV, start = $6000, type = bss;
	SRAMD:	load = SAV, start = $6010, type = bss;
	SRAMF:	load = SAV, start = $7FF0, type = bss;

	MENUS:	load = PRG0, start = $8000, type = ro;
	MENUD:	load = PRG0, start = $A000, type = ro;

	FUNCS:	load = PRG15, start = $C000, type = ro;
	FUNCD:	load = PRG15, start = $E000, type = ro;
	VECS:	load = PRG15, start = $FF00, type = ro;

	STUB0:	load = PRG0, start = $BFF0, type = ro;
	STUB1:	load = PRG1, start = $BFF0, type = ro;
	STUB2:	load = PRG2, start = $BFF0, type = ro;
	STUB3:	load = PRG3, start = $BFF0, type = ro;
	STUB4:	load = PRG4, start = $BFF0, type = ro;
	STUB5:	load = PRG5, start = $BFF0, type = ro;
	STUB6:	load = PRG6, start = $BFF0, type = ro;
	STUB7:	load = PRG7, start = $BFF0, type = ro;
	STUB8:	load = PRG8, start = $BFF0, type = ro;
	STUB9:	load = PRG9, start = $BFF0, type = ro;
	STUB10:	load = PRG10, start = $BFF0, type = ro;
	STUB11:	load = PRG11, start = $BFF0, type = ro;
	STUB12:	load = PRG12, start = $BFF0, type = ro;
	STUB13:	load = PRG13, start = $BFF0, type = ro;
	STUB14:	load = PRG14, start = $BFF0, type = ro;
	STUB15:	load = PRG15, start = $FFF0, type = ro;

	PATTERN0:	load = CHR0, type = ro;
	PATTERN1:	load = CHR1, type = ro;
	PATTERN2:	load = CHR2, type = ro;
	PATTERN3:	load = CHR3, type = ro;
	PATTERN4:	load = CHR4, type = ro;
	PATTERN5:	load = CHR5, type = ro;
	PATTERN6:	load = CHR6, type = ro;
	PATTERN7:	load = CHR7, type = ro;
	PATTERN8:	load = CHR8, type = ro;
	PATTERN9:	load = CHR9, type = ro;
	PATTERN10:	load = CHR10, type = ro;
	PATTERN11:	load = CHR11, type = ro;
	PATTERN12:	load = CHR12, type = ro;
	PATTERN13:	load = CHR13, type = ro;
	PATTERN14:	load = CHR14, type = ro;
	PATTERN15:	load = CHR15, type = ro;
}

FILES {
	%O: format = bin;
}
